
# application.yml 是用户级别的资源配置
# bootstrap.yml 是系统级别的资源配置，优先级更高

# SpringCloud 会创建一个 Bootstrap Context 启动上下文作为 spring Application Context 的父上下文。初始化时 Bootstrap Context
# 负责从外部源加载配置属性并解析配置。这两个上下文共享一个从外部获取的 Environment。
# Bootstrap 属性有更高的优先级，默认它们不会被本地配置覆盖。Bootstrap Context 和 Application Context 有着不同的约定。
# 所以新增了一个 Bootstrap.yml 文件，保证 Bootstrap Context 和 Application Context 配置的分离。
# 加载顺序为：bootstrap.* 配置 --》 config server 中远程的配置 --》 最后加载 application.*。

spring:
  # 在使用 eureka 服务发现时，它会从注册的服务中获取指定的 configserver 的配置信息。并且要配置在 Bootstrap 文件中
  cloud:
    config:
      discovery:
        enabled: true
        # 即指定 server 的 application-name
        service-id: microservice-config-server-eureka-3345
      # 使用以下属性来指定服务端的账号密码
      username: admin
      password: admin

    # 启用跟踪总线事件
    bus:
      trace:
        enabled: true

  rabbitmq:
    host: localhost
    port: 5672
    username: hyman
    password: hyman

