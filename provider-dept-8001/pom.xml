<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hyman</groupId>
	<artifactId>provider-dept-8001</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>provider-dept-8001</name>
	<description>部门微服务的提供者</description>

	<parent>
		<!-- 子项目中需要显示声明父类，才能有明确的继承表现，无意外就是父类的默认版本否则自己定义（这里是手动添加的） -->
		<groupId>com.hyman</groupId>
		<artifactId>SpringCloudAlibabaDemo</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<dependencies>
		<!-- 引入自己定义的api通用包，可以使用Dept部门Entity -->
		<dependency>
			<groupId>com.hyman</groupId>
			<artifactId>cloud-api</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- actuator 监控信息完善 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<!--<exclusions>-->
				<!--<exclusion>-->
					<!--<artifactId>spring-boot-starter-logging</artifactId>-->
					<!--<groupId>org.springframework.boot</groupId>-->
				<!--</exclusion>-->
			<!--</exclusions>-->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- optional=true，依赖不会往下传递，如果有项目依赖本项目，并且想要使用devtools，需要重新引入 -->
			<optional>true</optional>
		</dependency>

		<!-- spring-cloud-core 包 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-dubbo</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-alibaba-nacos-discovery</artifactId>
			<exclusions>
				<exclusion>
					<!-- 因为其默认版本为 2.2.1.RELEASE，会存在兼容问题 -->
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-context</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.15</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	</dependencies>

	<!-- 构建特殊配置信息，因为在构建Maven项目的时候，如果没有进行特殊的配置，Maven会按照标准的目录结构查找和处理各种类型文件。 -->
	<build>
		<finalName>SpringCloudAlibabaDemo</finalName>
		<!-- 通过 resource 标签来指定加载配置文件，也可以指定访问的资源的路径 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 该属性用来表示资源文件中的占位符是否需要被替换，true为需要替换（例如替换 ${xxx}）-->
				<filtering>true</filtering>
				<!-- 排除掉特定的文件（例如 init.json 文件）-->
				<!--<excludes>-->
					<!--<exclude>**/*.json</exclude>-->
				<!--</excludes>-->
			</resource>
		</resources>

		<!-- 下面插件是用来让 maven 项目可以访问到资源，并且可以自定义规则去访问。否则按照 maven 默认的来访问资源。-->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<!-- 自定义访问资源的规则为，只访问到以 $ 符号开头或结尾的数据 -->
				<configuration>
					<delimiters>
						<delimit>@</delimit>
					</delimiters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- 热部署插件设置，如果没有该配置，则热部署的devtools不生效 -->
				<!--
				如果是Eclipse 配置到这里，只要重启服务热部署就会生效了。但 IDEA的话，热部署还不会生效，因为devTools只会在类
				路径上的文件发生更改时才会自动重启，而IDEA默认不会自动编译。 解决方法有两种：

				1、手动：修改完代码，按快捷键Ctrl+F9，手动构建项目，或者只修改单个类文件的话，按Ctrl+Shift+F9，重新编译该类
					文件，即可触发重启服务。
				2、自动：File -> Settings -> Compiler -> 勾选 Build Project automatically -> 按快捷键 Ctrl+Shift+Alt+/ ->
					 选择1.Registry ->  勾选 compiler.automake.allow.when.app.running 即可。
				-->
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
