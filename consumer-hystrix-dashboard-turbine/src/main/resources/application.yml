server:
  port: 9001

spring:
  application:
    #   这个名字很重要，是注册到注册中心必须用到的，也是服务发现时用到的名字
    name: microservice-consumer-hystrix-dashboard-turbine

eureka:
  # 客户端注册进 eureka 服务列表内
  client:
    healthcheck:
      enabled: true
    service-url:
      #    单机版，只有一个注册中心时
      #      defaultZone: http://localhost:7001/eureka
      #     集群版，同时有多个注册中心时
      defaultZone: http://admin:admin@eureka7001:7001/eureka/,http://eureka7002:7002/eureka/,http://eureka7003:7003/eureka/
  instance:
    # 自定义在注册中心页面显示的微服务的名称
    instance-id: consumer-hystrix-dashboard-turbine
    # 设置显示微服务名称链接的访问路径 IP 地址
    prefer-ip-address: true
    # 自定义 eureka 元数据，此数据会发送到 eureka 服务器中，并供其他实例使用
    metadata-map:
      # 这个是 eureka 可以理解的元数据，会影响客户端行为
      zone: ALL
      # key 与 value 可以随便写，不会影响客户端行为
      hyman: ALL
    # 这个名字是注册到注册中心最根本的名字，配置时会覆盖掉 application.name。此配置的主要作用是当 springcloud 与其他中间件结合
    # 使用时，为了避免实例名字出现 unkown 而配置的
    appname: microservice-consumer-hystrix-dashboard-turbine

  # eureka 自带的图形界面
  dashboard:
    enable: true
    path: /x


## 监控单个集群
#turbine:
#  aggregator:
#  # 指定监控的集群（所有指定的 application.name 相同的服务），注意是大写，多个使用逗号分割，默认为 default，可使用 http://../turbine.stream?cluster=（clusterConfig 配置的其中一个值）即可访问
#    clusterConfig: MICROSERVICE-ZUUL-GATEWAY
#  # 指定 Eureka serviceIds 列表，表明监控哪些服务（application.name）
#  appConfig: microservice-zuul-gateway
#  instanceUrlSuffix:
#    MICROSERVICE-ZUUL-GATEWAY: /zuul/hystrix.stream

# 监控多个集群
turbine:
  aggregator:
    # 监控 appConfig 指定的所有的集群，使用 http://../turbine.stream 即可访问
    clusterConfig: default
  # 指定监控的集群（所有指定的 application.name 相同的服务）
  appConfig: microservice-provider-dept,microservice-zuul-gateway
  # 1，它指定集群名称，值是一个 SPEL表达式（默认是字符串 appname），则 clusterConfig 需要配置想要监控的应用名称（例如上面的配置）
  # 2，当值为 default 时，则 clusterConfig 可以不写，因为默认就是 default
  # 3，当值为 metadata['cluster'] 时（从AWS ASG名称中获取集群名称），假设想要监控的应用配置了 eureka.instance.metadata-map.cluster: ABC，则需要配置 clusterConfig 为 ABC
  clusterNameExpression: "'default'"


logging:
  level:
    root: info
    com.netflix.turbine.monitor: debug
